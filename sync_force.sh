#!/bin/bash
# ============================================================
#  Script : sync_force.sh
#  Auteur : Eric738
#  Objet  : Synchronisation automatique du d√©p√¥t GitHub
#  Fonction :
#     - Nettoie les fichiers inutiles
#     - D√©tecte la version dans webapp.py
#     - Cr√©e une sauvegarde locale
#     - Commit et push forc√© vers GitHub
# ============================================================

set -e  # Stoppe le script √† la moindre erreur

# --- Nettoyage des fichiers inutiles ---
echo "üßπ Nettoyage des fichiers temporaires et logs..."
rm -f rspot.log *.bak *.tmp
find . -type d -name "__pycache__" -exec rm -rf {} +

# --- D√©tection automatique de la version ---
VERSION=$(grep -Eo 'v[0-9]+\.[0-9]+' webapp.py | tail -1)

if [ -z "$VERSION" ]; then
    echo "‚ö†Ô∏è  Version introuvable dans webapp.py. Utilisation de 'vX.Y'."
    VERSION="vX.Y"
else
    echo "üì¶ Version d√©tect√©e : $VERSION"
fi

# --- Cr√©ation d‚Äôune branche de sauvegarde ---
BRANCH_NAME="backup-avant-push-$(date +%Y%m%d-%H%M%S)"
echo "üîπ Cr√©ation de la sauvegarde locale : $BRANCH_NAME"
git branch "$BRANCH_NAME"

# --- Indexation des fichiers ---
echo "üîπ Ajout des fichiers modifi√©s..."
git add .

# --- Commit automatique ---
echo "üîπ Cr√©ation du commit local : $VERSION auto-sync"
git commit -m "$VERSION auto-sync" || echo "‚ÑπÔ∏è Aucun changement √† valider."

# --- R√©cup√©ration du d√©p√¥t distant ---
echo "üîπ Synchronisation avec le d√©p√¥t distant..."
git fetch origin

# --- Push forc√© vers GitHub ---
echo "üöÄ Envoi de la version $VERSION vers GitHub..."
git push origin main --force

# --- V√©rification du succ√®s ---
if [ $? -eq 0 ]; then
    echo "‚úÖ Synchronisation r√©ussie !"
    echo "üîó Version $VERSION disponible sur :"
    echo "   https://github.com/Eric738/radio-spot-watcher"
else
    echo "‚ùå √âchec de la synchronisation. V√©rifie ton d√©p√¥t distant."
fi 